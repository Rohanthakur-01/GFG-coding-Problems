// GFG Problem Sum of nodes on the longest path from root to leaf node(medium)
// using c++
// TC = O(n) SC = O(n)
// tree data structure 
class Solution
{
public:
    void solve(Node* root, int len, int &maxlen, int sum, int &maxsum){
        //base case 
        if(root == NULL){
            if(len > maxlen ){
                maxlen = len;
                maxsum = sum;
            }
            
            else if(len == maxlen){
                maxsum = max(sum,maxsum);
            }
           return; 
        }
        
        sum = sum + root-> data;
        //call for left
        solve(root -> left,len+1,maxlen,sum,maxsum);
        //call for right
        solve(root -> right, len+1,maxlen,sum,maxsum);
    }
    int sumOfLongRootToLeafPath(Node *root)
    {
        //code here
        int len = 0;
        int maxlen = 0;
        int sum = 0;
        int maxsum =0;
        
        solve(root,len,maxlen,sum,maxsum);
        return maxsum;
    }
};
