//GFG problem Construct Tree from Inorder & Preorder
// using c++
//it gives TLE 
//approach 1

class Solution{
    public:
    
    int findposition(int in[],int element,int n){
        for(int i=0;i<n;i++){
            if(in[i]==element){
                return i;
            }
        }
        return -1;
    }
    
    Node* solve(int in[],int pre[],int &index,int inorderStart,int inorderEnd,int n){
        //base case 
        if(index>=n || inorderStart > inorderEnd){
            return NULL;
        }
        int element = pre[index++];
        Node* root = new Node(element);
        int pos = findposition(in,element,n);
        //call for left
        root -> left = solve(in,pre,index,inorderStart,pos-1,n);
        root -> right = solve(in,pre,index,pos+1,inorderEnd,n);
        
        return root;
    }
    Node* buildTree(int in[],int pre[], int n)
    {
        int preorderIndex = 0;
        Node * ans = solve(in,pre,preorderIndex,0,n-1,n);
        return ans;
    }
};

//---------------------------------------------------------------------------------------------approach 2----------------------------------------------------------------------------------------------------------
